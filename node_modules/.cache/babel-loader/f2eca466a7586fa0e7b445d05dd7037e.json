{"ast":null,"code":"/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable react/forbid-prop-types */\nimport React from \"react\";\nimport Styled from \"styled-components\";\nimport { Flex, Box } from \"rebass\";\nimport { Link } from \"../../../../routes\";\nimport arrowIcon from \"@/resources/icons/right-arrow-filled.svg\";\n/** @component */\n\nvar GameCardContainer = Styled(Flex).withConfig({\n  displayName: \"game-card__GameCardContainer\",\n  componentId: \"sc-1wst0dk-0\"\n})([\"height:6rem;width:100%;background-color:\", \";box-shadow:\", \";position:relative;&:before{content:\\\" \\\";display:block;position:absolute;top:0;left:0;width:3px;height:100%;background-color:\", \";}@media screen and (max-width:738px){height:auto;background-color:\", \";border-bottom:1px solid rgba(50,50,50,.25);box-shadow:none;&:before{display:none;}}\"], function (props) {\n  return props.isEven ? \"rgba(240, 240, 240, 0.6)\" : \"#FFFFFF\";\n}, function (props) {\n  return props.isActiveGame ? \"1px 6px 15px rgba(10, 10, 10, 0.1)\" : null;\n}, function (props) {\n  return props.isActiveGame ? \"#DB4437\" : null;\n}, function (props) {\n  return props.theme ? props.theme.colorTheme.white : \"#FFFFFF\";\n});\nvar GameTimeContainer = Styled(Flex).withConfig({\n  displayName: \"game-card__GameTimeContainer\",\n  componentId: \"sc-1wst0dk-1\"\n})([\"@media screen and (max-width:738px){flex-direction:row-reverse;align-items:flex-end;}\"]);\nvar GameTimeWrapper = Styled(Box).withConfig({\n  displayName: \"game-card__GameTimeWrapper\",\n  componentId: \"sc-1wst0dk-2\"\n})([\"@media screen and (max-width:738px){font-size:1.2rem;color:rgba(50,50,50,0.5);&:before{content:\\\"-\\\";margin:0px .5rem;}}\"]);\nvar GameDateWrapper = Styled(Box).withConfig({\n  displayName: \"game-card__GameDateWrapper\",\n  componentId: \"sc-1wst0dk-3\"\n})([\"font-size:1.2rem;color:rgba(50,50,50,0.5);\"]);\nvar TeamContentWrapper = Styled(Box).withConfig({\n  displayName: \"game-card__TeamContentWrapper\",\n  componentId: \"sc-1wst0dk-4\"\n})([\"display:flex;flex-direction:row;align-items:center;font-size:1.5rem;@media screen and (max-width:738px){flex-direction:column-reverse;align-items:flex-start;margin-right:1.3rem;}\"]);\nvar TeamInfoContainer = Styled.div.withConfig({\n  displayName: \"game-card__TeamInfoContainer\",\n  componentId: \"sc-1wst0dk-5\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-left:2rem;@media screen and (max-width:738px){margin-left:0px;}\"]);\nvar VsTextWrapper = Styled(Box).withConfig({\n  displayName: \"game-card__VsTextWrapper\",\n  componentId: \"sc-1wst0dk-6\"\n})([\"margin-left:2rem;@media screen and (max-width:738px){margin:0rem 2rem;}\"]);\n/**\n * TODO: This component would be used when the Team badges are provided.\n */\n// const TeamBadgeWrapper = Styled.div`\n// \twidth: 1.25rem;\n// \theight: 1.25rem;\n// \tborder-radius: 50%;\n// \tmargin: 0 1rem;\n// \tbackground-image: url(${props => (props.teamBadge ? props.teamBadge : null)});\n// \tbackground-color: ${props =>\n//     props.teamBadge ? null : `rgba(200, 200, 200, 0.7)`};\n// \tbackground-size: contain;\n// \tbackground-repeat: no-repeat;\n// \tbackground-position: center;\n// `;\n\nvar TeamNameWrapper = Styled.div.withConfig({\n  displayName: \"game-card__TeamNameWrapper\",\n  componentId: \"sc-1wst0dk-7\"\n})([\"\"]);\nvar TeamNameText = Styled.p.withConfig({\n  displayName: \"game-card__TeamNameText\",\n  componentId: \"sc-1wst0dk-8\"\n})([\"color:inherit;@media screen and (max-width:738px){margin:.2rem 0rem;}\"]);\nvar StyledLink = Styled.a.withConfig({\n  displayName: \"game-card__StyledLink\",\n  componentId: \"sc-1wst0dk-9\"\n})([\"width:100%;color:inherit;text-decoration:none;display:flex;flex-direction:row;\"]);\nvar ArrowContainer = Styled.div.withConfig({\n  displayName: \"game-card__ArrowContainer\",\n  componentId: \"sc-1wst0dk-10\"\n})([\"@media screen and (min-width:738px){display:none;}width:2rem;height:2rem;text-align:center;margin-left:auto;img{height:100%;max-width:100%;}\"]);\n/**\n *  Game Card component. Renders the game info in the Game List components for\n *  specific leagues.\n *\n *  @visibleName GameCardComponent\n *  @returns boolean\n */\n\nvar checkGamePath = function checkGamePath(game, location) {\n  var gameID = game.id; // We need to find the active game card.\n  // We first get the game Id from the path and test\n  // If it is the value of the gameId.\n\n  var pathArr = [];\n\n  if (location && location.pathname) {\n    pathArr = location.pathname.split(\"/\");\n\n    if (pathArr) {\n      var pathArrLength = pathArr.length - 1;\n      var pathID = pathArr[pathArrLength];\n      return gameID === pathID;\n    }\n\n    return false;\n  }\n\n  return false;\n};\n\nvar GameCard = function GameCard(_ref) {\n  var game = _ref.game,\n      isEven = _ref.isEven,\n      location = _ref.location;\n  return React.createElement(GameCardContainer, {\n    className: \"game-card-container\",\n    alignItems: \"center\",\n    px: [\"1.5rem\"],\n    py: [\"2rem\", \"2rem\", \"1rem\", \"1rem\"],\n    isEven: isEven,\n    isActiveGame: checkGamePath(game, location)\n  }, React.createElement(Link, {\n    route: \"/game/\".concat(game.id),\n    passHref: true\n  }, React.createElement(StyledLink, null, React.createElement(TeamContentWrapper, null, React.createElement(GameTimeContainer, {\n    flexDirection: \"column\",\n    width: [\"auto\", \"auto\", \"5.5rem\", \"5.5rem\"]\n  }, React.createElement(GameTimeWrapper, null, game && game.time ? game.time.time : \"19:45\"), React.createElement(GameDateWrapper, null, game && game.time ? game.time.date : \"26 Aug\")), React.createElement(TeamInfoContainer, null, React.createElement(TeamNameWrapper, null, React.createElement(TeamNameText, null, game && game.team1 ? game.team1.name : \"Team 1\")), React.createElement(VsTextWrapper, null, React.createElement(\"span\", null, \"vs\")), React.createElement(TeamInfoContainer, null, React.createElement(TeamNameWrapper, null, React.createElement(TeamNameText, null, game && game.team2 ? game.team2.name : \"Team 2\"))))), React.createElement(ArrowContainer, null, React.createElement(\"img\", {\n    src: arrowIcon,\n    alt: \"Arrow Icon\"\n  })))));\n};\n\nGameCard.defaultProps = {\n  isEven: false,\n  game: {},\n  location: {},\n  match: {}\n};\nexport default GameCard;","map":null,"metadata":{},"sourceType":"module"}