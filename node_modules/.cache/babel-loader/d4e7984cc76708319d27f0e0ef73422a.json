{"ast":null,"code":"/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable react/forbid-prop-types */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Styled from \"styled-components\";\nimport { Flex, Box } from \"rebass\";\nimport { Link } from \"../../../../routes\";\nimport arrowIcon from \"@/resources/icons/right-arrow-filled.svg\";\n/** @component */\n\nvar GameCardContainer = Styled(Flex).withConfig({\n  displayName: \"game-card__GameCardContainer\",\n  componentId: \"sc-1wst0dk-0\"\n})([\"height:6rem;width:100%;background-color:\", \";box-shadow:\", \";position:relative;&:before{content:\\\" \\\";display:block;position:absolute;top:0;left:0;width:3px;height:100%;background-color:\", \";}@media screen and (max-width:738px){height:auto;background-color:\", \";border-bottom:1px solid rgba(50,50,50,.25);box-shadow:none;&:before{display:none;}}\"], function (props) {\n  return props.isEven ? \"rgba(240, 240, 240, 0.6)\" : \"#FFFFFF\";\n}, function (props) {\n  return props.isActiveGame ? \"1px 6px 15px rgba(10, 10, 10, 0.1)\" : null;\n}, function (props) {\n  return props.isActiveGame ? \"#DB4437\" : null;\n}, function (props) {\n  return props.theme ? props.theme.colorTheme.white : \"#FFFFFF\";\n});\nvar GameTimeContainer = Styled(Flex).withConfig({\n  displayName: \"game-card__GameTimeContainer\",\n  componentId: \"sc-1wst0dk-1\"\n})([\"@media screen and (max-width:738px){flex-direction:row-reverse;align-items:flex-end;}\"]);\nvar GameTimeWrapper = Styled(Box).withConfig({\n  displayName: \"game-card__GameTimeWrapper\",\n  componentId: \"sc-1wst0dk-2\"\n})([\"@media screen and (max-width:738px){font-size:1.2rem;color:rgba(50,50,50,0.5);&:before{content:\\\"-\\\";margin:0px .5rem;}}\"]);\nvar GameDateWrapper = Styled(Box).withConfig({\n  displayName: \"game-card__GameDateWrapper\",\n  componentId: \"sc-1wst0dk-3\"\n})([\"font-size:1.2rem;color:rgba(50,50,50,0.5);\"]);\nvar TeamContentWrapper = Styled(Box).withConfig({\n  displayName: \"game-card__TeamContentWrapper\",\n  componentId: \"sc-1wst0dk-4\"\n})([\"display:flex;flex-direction:row;align-items:center;font-size:1.5rem;@media screen and (max-width:738px){flex-direction:column-reverse;align-items:flex-start;margin-right:1.3rem;}\"]);\nvar TeamInfoContainer = Styled.div.withConfig({\n  displayName: \"game-card__TeamInfoContainer\",\n  componentId: \"sc-1wst0dk-5\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-left:2rem;@media screen and (max-width:738px){margin-left:0px;}\"]);\nvar VsTextWrapper = Styled(Box).withConfig({\n  displayName: \"game-card__VsTextWrapper\",\n  componentId: \"sc-1wst0dk-6\"\n})([\"margin-left:2rem;@media screen and (max-width:738px){margin:0rem 2rem;}\"]);\n/**\n * TODO: This component would be used when the Team badges are provided.\n */\n// const TeamBadgeWrapper = Styled.div`\n// \twidth: 1.25rem;\n// \theight: 1.25rem;\n// \tborder-radius: 50%;\n// \tmargin: 0 1rem;\n// \tbackground-image: url(${props => (props.teamBadge ? props.teamBadge : null)});\n// \tbackground-color: ${props =>\n//     props.teamBadge ? null : `rgba(200, 200, 200, 0.7)`};\n// \tbackground-size: contain;\n// \tbackground-repeat: no-repeat;\n// \tbackground-position: center;\n// `;\n\nvar TeamNameWrapper = Styled.div.withConfig({\n  displayName: \"game-card__TeamNameWrapper\",\n  componentId: \"sc-1wst0dk-7\"\n})([\"\"]);\nvar TeamNameText = Styled.p.withConfig({\n  displayName: \"game-card__TeamNameText\",\n  componentId: \"sc-1wst0dk-8\"\n})([\"color:inherit;@media screen and (max-width:738px){margin:.2rem 0rem;}\"]);\nvar StyledLink = Styled.a.withConfig({\n  displayName: \"game-card__StyledLink\",\n  componentId: \"sc-1wst0dk-9\"\n})([\"width:100%;color:inherit;text-decoration:none;display:flex;flex-direction:row;\"]);\nvar ArrowContainer = Styled.div.withConfig({\n  displayName: \"game-card__ArrowContainer\",\n  componentId: \"sc-1wst0dk-10\"\n})([\"@media screen and (min-width:738px){display:none;}width:2rem;height:2rem;text-align:center;margin-left:auto;img{height:100%;max-width:100%;}\"]);\n/**\n *  Game Card component. Renders the game info in the Game List components for\n *  specific leagues.\n *\n *  @visibleName GameCardComponent\n *  @returns boolean\n */\n\nvar checkGamePath = function checkGamePath(game, location) {\n  var gameID = game.id; // We need to find the active game card.\n  // We first get the game Id from the path and test\n  // If it is the value of the gameId.\n\n  var pathArr = [];\n\n  if (location && location.pathname) {\n    pathArr = location.pathname.split(\"/\");\n\n    if (pathArr) {\n      var pathArrLength = pathArr.length - 1;\n      var pathID = pathArr[pathArrLength];\n      return gameID === pathID;\n    }\n\n    return false;\n  }\n\n  return false;\n};\n\nvar GameCard = function GameCard(_ref) {\n  var game = _ref.game,\n      isEven = _ref.isEven,\n      location = _ref.location,\n      league = _ref.league;\n\n  if (!game) {\n    return null;\n  }\n\n  var teams = game.event.split(\"-\", 2);\n  var team1 = teams[0];\n  var team2 = teams[1];\n  return React.createElement(GameCardContainer, {\n    className: \"game-card-container\",\n    alignItems: \"center\",\n    px: [\"1.5rem\"],\n    py: [\"2rem\", \"2rem\", \"1rem\", \"1rem\"],\n    isEven: isEven,\n    isActiveGame: checkGamePath(game, location)\n  }, React.createElement(Link, {\n    route: \"/game/\".concat(league, \"/\").concat(game.eventRef),\n    passHref: true\n  }, React.createElement(StyledLink, null, React.createElement(TeamContentWrapper, null, React.createElement(GameTimeContainer, {\n    flexDirection: \"column\",\n    width: [\"auto\", \"auto\", \"5.5rem\", \"5.5rem\"]\n  }, React.createElement(GameTimeWrapper, null, game.time || \"19:45\"), React.createElement(GameDateWrapper, null, game.date || \"26 Aug\")), React.createElement(TeamInfoContainer, null, React.createElement(TeamNameWrapper, null, React.createElement(TeamNameText, null, team1 || \"Team 1\")), React.createElement(VsTextWrapper, null, React.createElement(\"span\", null, \"vs\")), React.createElement(TeamInfoContainer, null, React.createElement(TeamNameWrapper, null, React.createElement(TeamNameText, null, team2 || \"Team 2\"))))), React.createElement(ArrowContainer, null, React.createElement(\"img\", {\n    src: arrowIcon,\n    alt: \"Arrow Icon\"\n  })))));\n};\n\nGameCard.propTypes = {\n  /** Check if game card is even */\n  isEven: PropTypes.bool,\n\n  /** Contains the Match object */\n  match: PropTypes.object,\n\n  /** Contains the Game object */\n  game: PropTypes.object,\n\n  /** Contains the Router's location. Useful incase of Re-routing */\n  location: PropTypes.object\n};\nGameCard.defaultProps = {\n  isEven: false,\n  game: {},\n  location: {},\n  match: {}\n};\nexport default GameCard;","map":{"version":3,"sources":["/Users/iyk/Documents/sandbox/oddschecker-fe-ssr/src/components/games-card/components/game-card.js"],"names":["React","PropTypes","Styled","Flex","Box","Link","arrowIcon","GameCardContainer","props","isEven","isActiveGame","theme","colorTheme","white","GameTimeContainer","GameTimeWrapper","GameDateWrapper","TeamContentWrapper","TeamInfoContainer","div","VsTextWrapper","TeamNameWrapper","TeamNameText","p","StyledLink","a","ArrowContainer","checkGamePath","game","location","gameID","id","pathArr","pathname","split","pathArrLength","length","pathID","GameCard","league","teams","event","team1","team2","eventRef","time","date","propTypes","bool","match","object","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/forbid-prop-types */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Styled from \"styled-components\";\nimport { Flex, Box } from \"rebass\";\nimport { Link } from \"../../../../routes\";\n\nimport arrowIcon from \"@/resources/icons/right-arrow-filled.svg\";\n\n/** @component */\nconst GameCardContainer = Styled(Flex)`\n    height: 6rem;\n    width: 100%;\n    background-color: ${props =>\n      props.isEven ? `rgba(240, 240, 240, 0.6)` : `#FFFFFF`};\n    box-shadow: ${props =>\n      props.isActiveGame ? \"1px 6px 15px rgba(10, 10, 10, 0.1)\" : null};\n    position: relative;\n    &:before{\n      content: \" \";\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 3px;\n      height: 100%;\n      background-color: ${props => (props.isActiveGame ? \"#DB4437\" : null)};\n    }\n    @media screen and (max-width: 738px){\n      height: auto;\n      background-color: ${props =>\n        props.theme ? props.theme.colorTheme.white : \"#FFFFFF\"};\n        border-bottom: 1px solid rgba(50, 50, 50, .25);\n      box-shadow: none;\n      &:before{\n        display: none;\n      }\n    }\n`;\n\nconst GameTimeContainer = Styled(Flex)`\n  @media screen and (max-width: 738px){\n    flex-direction: row-reverse;\n    align-items: flex-end;\n  }\n`;\n\nconst GameTimeWrapper = Styled(Box)`\n  @media screen and (max-width: 738px){\n    font-size: 1.2rem;\n    color: rgba(50, 50, 50, 0.5);\n    &:before{\n      content: \"-\";\n      margin: 0px .5rem;\n    }\n  }\n`;\n\nconst GameDateWrapper = Styled(Box)`\n\tfont-size: 1.2rem;\n\tcolor: rgba(50, 50, 50, 0.5);\n`;\n\nconst TeamContentWrapper = Styled(Box)`\n  display: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tfont-size: 1.5rem;\n  @media screen and (max-width: 738px){\n    flex-direction: column-reverse;\n    align-items: flex-start;\n    margin-right: 1.3rem;\n  }\n`;\n\nconst TeamInfoContainer = Styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tmargin-left: 2rem;\n  @media screen and (max-width: 738px){\n    margin-left: 0px;\n  }\n`;\nconst VsTextWrapper = Styled(Box)`\n\tmargin-left: 2rem;\n  @media screen and (max-width: 738px){\n    margin: 0rem 2rem;\n  }\n`;\n\n/**\n * TODO: This component would be used when the Team badges are provided.\n */\n// const TeamBadgeWrapper = Styled.div`\n// \twidth: 1.25rem;\n// \theight: 1.25rem;\n// \tborder-radius: 50%;\n// \tmargin: 0 1rem;\n// \tbackground-image: url(${props => (props.teamBadge ? props.teamBadge : null)});\n// \tbackground-color: ${props =>\n//     props.teamBadge ? null : `rgba(200, 200, 200, 0.7)`};\n// \tbackground-size: contain;\n// \tbackground-repeat: no-repeat;\n// \tbackground-position: center;\n// `;\n\nconst TeamNameWrapper = Styled.div`\n\t\n`;\nconst TeamNameText = Styled.p`\n\tcolor: inherit;\n  @media screen and (max-width: 738px){\n    margin: .2rem 0rem;\n  }\n`;\n\nconst StyledLink = Styled.a`\n\twidth: 100%;\n\tcolor: inherit;\n\ttext-decoration: none;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ArrowContainer = Styled.div`\n  @media screen and (min-width: 738px){\n    display: none;\n  }\n  width: 2rem;\n  height: 2rem;\n  text-align: center;\n  margin-left: auto;\n  img {\n    height: 100%;\n    max-width: 100%;\n  }\n`;\n\n/**\n *  Game Card component. Renders the game info in the Game List components for\n *  specific leagues.\n *\n *  @visibleName GameCardComponent\n *  @returns boolean\n */\n\nconst checkGamePath = (game, location) => {\n  const gameID = game.id;\n\n  // We need to find the active game card.\n  // We first get the game Id from the path and test\n  // If it is the value of the gameId.\n\n  let pathArr = [];\n  if (location && location.pathname) {\n    pathArr = location.pathname.split(\"/\");\n    if (pathArr) {\n      const pathArrLength = pathArr.length - 1;\n      const pathID = pathArr[pathArrLength];\n      return gameID === pathID;\n    }\n    return false;\n  }\n  return false;\n};\n\nconst GameCard = ({ game, isEven, location, league }) => {\n  if (!game) {\n    return null;\n  }\n  const teams = game.event.split(\"-\", 2);\n  const team1 = teams[0];\n  const team2 = teams[1];\n\n  return (\n    <GameCardContainer\n      className=\"game-card-container\"\n      alignItems=\"center\"\n      px={[\"1.5rem\"]}\n      py={[\"2rem\", \"2rem\", \"1rem\", \"1rem\"]}\n      isEven={isEven}\n      isActiveGame={checkGamePath(game, location)}>\n      {/* We are passing a 'TRUE' state to the location prop so we can use it in the parent router to perform\n        Consecutive Route renders \n        ...\n        We are removing the team badge placeholders for now till they are provided.\n        TODO: Replace the TeamBadge components when the team badges can be made available.\n    */}\n      <Link route={`/game/${league}/${game.eventRef}`} passHref>\n        <StyledLink>\n          <TeamContentWrapper>\n            <GameTimeContainer\n              flexDirection=\"column\"\n              width={[\"auto\", \"auto\", \"5.5rem\", \"5.5rem\"]}>\n              <GameTimeWrapper>{game.time || `19:45`}</GameTimeWrapper>\n              <GameDateWrapper>{game.date || `26 Aug`}</GameDateWrapper>\n            </GameTimeContainer>\n            <TeamInfoContainer>\n              <TeamNameWrapper>\n                <TeamNameText>{team1 || \"Team 1\"}</TeamNameText>\n              </TeamNameWrapper>\n              <VsTextWrapper>\n                <span>vs</span>\n              </VsTextWrapper>\n              <TeamInfoContainer>\n                <TeamNameWrapper>\n                  <TeamNameText>{team2 || \"Team 2\"}</TeamNameText>\n                </TeamNameWrapper>\n              </TeamInfoContainer>\n            </TeamInfoContainer>\n          </TeamContentWrapper>\n          <ArrowContainer>\n            <img src={arrowIcon} alt=\"Arrow Icon\" />\n          </ArrowContainer>\n        </StyledLink>\n      </Link>\n    </GameCardContainer>\n  );\n};\nGameCard.propTypes = {\n  /** Check if game card is even */\n  isEven: PropTypes.bool,\n  /** Contains the Match object */\n  match: PropTypes.object,\n  /** Contains the Game object */\n  game: PropTypes.object,\n\n  /** Contains the Router's location. Useful incase of Re-routing */\n  location: PropTypes.object\n};\n\nGameCard.defaultProps = {\n  isEven: false,\n  game: {},\n  location: {},\n  match: {}\n};\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}