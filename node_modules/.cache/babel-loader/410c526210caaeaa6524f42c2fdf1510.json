{"ast":null,"code":"// This is the Main Ad Wrapper component.\n// If uses the Render Props pattern to take in and render an Ad\n// The Component Assumes the Ads are all in the Horizontal Mode\n// However, a dimension array can be passed to the component with each\n// Array element denoting [WIDTH, HEIGHT].\n// PropTypes for the various possible props has been passed.\nimport React from \"react\";\nimport Styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Flex, Box } from \"rebass\";\nvar AdWrapperFlex = Styled(Flex).withConfig({\n  displayName: \"components__AdWrapperFlex\",\n  componentId: \"icjmqx-0\"\n})([\"height:\", \";\"], function (props) {\n  return props.height ? props.height : \"10rem\";\n});\nvar AdWrapperContainer = Styled(Box).withConfig({\n  displayName: \"components__AdWrapperContainer\",\n  componentId: \"icjmqx-1\"\n})([\"height:100%;background-color:\", \";max-width:100%;display:flex;justify-content:center;align-items:center;img{max-width:100%;height:100%;}\"], function (props) {\n  return props.hasRender ? null : \"rgba(200, 200, 200, 0.7)\";\n});\n\nvar AdWrapper = function AdWrapper(_ref) {\n  var height = _ref.height,\n      mt = _ref.mt,\n      my = _ref.my,\n      mx = _ref.mx,\n      mb = _ref.mb,\n      render = _ref.render;\n  return React.createElement(AdWrapperFlex, {\n    width: [1],\n    height: height || \"12rem\",\n    mt: mt,\n    my: my,\n    mx: mx,\n    mb: mb\n  }, React.createElement(AdWrapperContainer, {\n    hasRender: !!render\n  }, render ? render() : null));\n};\n\nAdWrapper.propTypes = {\n  render: PropTypes.func,\n  isHorizontal: PropTypes.bool,\n  dimensions: PropTypes.array\n};\nexport default AdWrapper;","map":{"version":3,"sources":["/Users/iyk/Documents/sandbox/oddschecker-fe-ssr/src/components/adWrapper/components/index.js"],"names":["React","Styled","PropTypes","Flex","Box","AdWrapperFlex","props","height","AdWrapperContainer","hasRender","AdWrapper","mt","my","mx","mb","render","propTypes","func","isHorizontal","bool","dimensions","array"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,QAA1B;AAEA,IAAMC,aAAa,GAAGJ,MAAM,CAACE,IAAD,CAAT;AAAA;AAAA;AAAA,qBACP,UAAAG,KAAK;AAAA,SAAKA,KAAK,CAACC,MAAN,GAAeD,KAAK,CAACC,MAArB,GAA8B,OAAnC;AAAA,CADE,CAAnB;AAIA,IAAMC,kBAAkB,GAAGP,MAAM,CAACG,GAAD,CAAT;AAAA;AAAA;AAAA,iJAEF,UAAAE,KAAK;AAAA,SACvBA,KAAK,CAACG,SAAN,GAAkB,IAAlB,GAAyB,0BADF;AAAA,CAFH,CAAxB;;AAeA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAwC;AAAA,MAArCH,MAAqC,QAArCA,MAAqC;AAAA,MAA7BI,EAA6B,QAA7BA,EAA6B;AAAA,MAAzBC,EAAyB,QAAzBA,EAAyB;AAAA,MAArBC,EAAqB,QAArBA,EAAqB;AAAA,MAAjBC,EAAiB,QAAjBA,EAAiB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACxD,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,CAAC,CAAD,CADT;AAEE,IAAA,MAAM,EAAER,MAAM,IAAI,OAFpB;AAGE,IAAA,EAAE,EAAEI,EAHN;AAIE,IAAA,EAAE,EAAEC,EAJN;AAKE,IAAA,EAAE,EAAEC,EALN;AAME,IAAA,EAAE,EAAEC;AANN,KAOE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAE,CAAC,CAACC;AAAjC,KACGA,MAAM,GAAGA,MAAM,EAAT,GAAc,IADvB,CAPF,CADF;AAaD,CAdD;;AAgBAL,SAAS,CAACM,SAAV,GAAsB;AACpBD,EAAAA,MAAM,EAAEb,SAAS,CAACe,IADE;AAEpBC,EAAAA,YAAY,EAAEhB,SAAS,CAACiB,IAFJ;AAGpBC,EAAAA,UAAU,EAAElB,SAAS,CAACmB;AAHF,CAAtB;AAMA,eAAeX,SAAf","sourcesContent":["// This is the Main Ad Wrapper component.\n// If uses the Render Props pattern to take in and render an Ad\n// The Component Assumes the Ads are all in the Horizontal Mode\n// However, a dimension array can be passed to the component with each\n// Array element denoting [WIDTH, HEIGHT].\n// PropTypes for the various possible props has been passed.\n\nimport React from \"react\";\nimport Styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Flex, Box } from \"rebass\";\n\nconst AdWrapperFlex = Styled(Flex)`\n  height: ${props => (props.height ? props.height : \"10rem\")};\n`;\n\nconst AdWrapperContainer = Styled(Box)`\n  height: 100%;\n  background-color: ${props =>\n    props.hasRender ? null : \"rgba(200, 200, 200, 0.7)\"};\n  max-width: 100%;\n  \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  img {\n    max-width: 100%;\n    height: 100%;\n  }\n`;\n\nconst AdWrapper = ({ height, mt, my, mx, mb, render }) => {\n  return (\n    <AdWrapperFlex\n      width={[1]}\n      height={height || \"12rem\"}\n      mt={mt}\n      my={my}\n      mx={mx}\n      mb={mb}>\n      <AdWrapperContainer hasRender={!!render}>\n        {render ? render() : null}\n      </AdWrapperContainer>\n    </AdWrapperFlex>\n  );\n};\n\nAdWrapper.propTypes = {\n  render: PropTypes.func,\n  isHorizontal: PropTypes.bool,\n  dimensions: PropTypes.array\n};\n\nexport default AdWrapper;\n"]},"metadata":{},"sourceType":"module"}